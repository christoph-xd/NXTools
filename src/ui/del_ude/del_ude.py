# ==============================================================================
#   WARNING!!  This file is overwritten by the Block UI Styler while generating
#   the automation code. Any modifications to this file will be lost after
#   generating the code again.
#
#        Filename:  D:\GitHub\NXTools\src\ui\del_ude\del_ude.py
#
#         This file was generated by the NX Block UI Styler
#         Created by: brandauc
#               Version: NX 2008
#               Date: 03-22-2023  (Format: mm-dd-yyyy)
#               Time: 15:28 (Format: hh-mm)
#
# ==============================================================================

# ==============================================================================
# ==============================================================================

import os
from pathlib import Path

# ------------------------------------------------------------------------------
# These imports are needed for the following template code
# ------------------------------------------------------------------------------
import NXOpen
import NXOpen.BlockStyler


# ------------------------------------------------------------------------------
# Represents Block Styler application cls
# ------------------------------------------------------------------------------
class del_ude:
    # static class members
    theSession = None
    theUI = None

    # ------------------------------------------------------------------------------
    # Constructor for NX Styler class
    # ------------------------------------------------------------------------------
    def __init__(self):
        try:
            self.theSession = NXOpen.Session.GetSession()
            self.theUI = NXOpen.UI.GetUI()
            self.theDlxFileName = os.path.join(Path(__file__).parent, "del_ude.dlx")
            self.theDialog = self.theUI.CreateDialog(self.theDlxFileName)
            self.theDialog.AddOkHandler(self.ok_cb)
            self.theDialog.AddUpdateHandler(self.update_cb)
            self.theDialog.AddCancelHandler(self.cancel_cb)
            self.theDialog.AddInitializeHandler(self.initialize_cb)
            self.theDialog.AddDialogShownHandler(self.dialogShown_cb)

            self.views = {"pow": False, "mtv": False, "gw": False, "mmv": False}
        except Exception as ex:
            raise ex

    # ------------------------------------------------------------------------------
    # This method shows the dialog on the screen
    # ------------------------------------------------------------------------------
    def Show(self):
        try:
            self.theDialog.Show()
        except Exception as ex:
            self.theUI.NXMessageBox.Show(
                "Block Styler", NXOpen.NXMessageBox.DialogType.Error, str(ex)
            )

    # ------------------------------------------------------------------------------
    # Method Name: Dispose
    # ------------------------------------------------------------------------------
    def Dispose(self):
        if self.theDialog != None:
            self.theDialog.Dispose()
            self.theDialog = None

    # ------------------------------------------------------------------------------
    # Callback Name: initialize_cb
    # ------------------------------------------------------------------------------
    def initialize_cb(self):
        try:
            self.group = self.theDialog.TopBlock.FindBlock("group")
            self.pow_tg = self.theDialog.TopBlock.FindBlock("pow_tg")
            self.mtv_tg = self.theDialog.TopBlock.FindBlock("mtv_tg")
            self.gw_tg = self.theDialog.TopBlock.FindBlock("gw_tg")
            self.mmv_tg = self.theDialog.TopBlock.FindBlock("mmv_tg")
        except Exception as ex:
            self.theUI.NXMessageBox.Show(
                "Block Styler", NXOpen.NXMessageBox.DialogType.Error, str(ex)
            )

    # ------------------------------------------------------------------------------
    # Callback Name: dialogShown_cb
    # ------------------------------------------------------------------------------
    def dialogShown_cb(self):
        try:
            pass
        except Exception as ex:
            self.theUI.NXMessageBox.Show(
                "Block Styler", NXOpen.NXMessageBox.DialogType.Error, str(ex)
            )

    # ------------------------------------------------------------------------------
    # Callback Name: update_cb
    # ------------------------------------------------------------------------------
    def update_cb(self, block):
        try:
            if block == self.pow_tg:
                # ---- Enter your code here -----
                self.views["pow"] = self.pow_tg.Value
                pass
            elif block == self.mtv_tg:
                # ---- Enter your code here -----
                self.views["mtv"] = self.mtv_tg.Value
                pass
            elif block == self.gw_tg:
                # ---- Enter your code here -----
                self.views["gw"] = self.gw_tg.Value
                pass
            elif block == self.mmv_tg:
                # ---- Enter your code here -----
                self.views["mmv"] = self.mmv_tg.Value
                pass
        except Exception as ex:
            self.theUI.NXMessageBox.Show(
                "Block Styler", NXOpen.NXMessageBox.DialogType.Error, str(ex)
            )

        return 0

    # ------------------------------------------------------------------------------
    # Callback Name: ok_cb
    # ------------------------------------------------------------------------------
    def ok_cb(self):
        errorCode = 0
        try:
            pass
        except Exception as ex:
            errorCode = 1
            self.theUI.NXMessageBox.Show(
                "Block Styler", NXOpen.NXMessageBox.DialogType.Error, str(ex)
            )

        return errorCode

    # ------------------------------------------------------------------------------
    # Callback Name: cancel_cb
    # ------------------------------------------------------------------------------
    def cancel_cb(self):
        errorCode = 0
        try:
            self.views = None
            pass
        except Exception as ex:
            errorCode = 1
            self.theUI.NXMessageBox.Show(
                "Block Styler", NXOpen.NXMessageBox.DialogType.Error, str(ex)
            )

        return errorCode

    # ------------------------------------------------------------------------------
    # Function Name: GetBlockProperties
    # Returns the propertylist of the specified BlockID
    # ------------------------------------------------------------------------------
    def GetBlockProperties(self, blockID):
        try:
            return self.theDialog.GetBlockProperties(blockID)
        except Exception as ex:
            self.theUI.NXMessageBox.Show(
                "Block Styler", NXOpen.NXMessageBox.DialogType.Error, str(ex)
            )

        return None


def main():
    thedel_ude = None
    try:
        thedel_ude = del_ude()
        thedel_ude.Show()
    except Exception as ex:
        NXOpen.UI.GetUI().NXMessageBox.Show(
            "Block Styler", NXOpen.NXMessageBox.DialogType.Error, str(ex)
        )
    finally:
        if thedel_ude != None:
            thedel_ude.Dispose()
            thedel_ude = None


if __name__ == "__main__":
    main()
